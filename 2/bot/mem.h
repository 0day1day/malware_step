#pragma once
#include "windows.h"

typedef unsigned long long uint64;

class cmem{
public:
	BYTE* data;
	DWORD size;
	bool realloc(int size);
	bool push(void *p,int size);
	bool push(uint64 v);
	bool push(DWORD v);
	bool push(WORD v);
	bool push(BYTE v);
	bool push(cmem &v);
	void free();
	cmem(const cmem & v);
	void operator =(cmem &v);
	cmem operator +(cmem &v);
	cmem();
	cmem(void *data,int size);
	~cmem();
	bool pop(void *in,DWORD size);
	bool pop(cmem &in, DWORD size);
	bool pop(DWORD &v);
	bool pop(BYTE &v);
	bool pop(WORD &v);
	bool pop(uint64 &v);
	bool cmem::pop(size_t size);
	bool cmem::push(LPSTR p);
	void alloc(DWORD size);
	bool cmem::push(LPWSTR p);
};
